In this step we are going to implement `Facebook` auth and allow our users to start new chats with their Facebook friends who already use our app.

First we will have to install a couple of Meteor packages:

    api$ meteor add btafel:accounts-facebook-cordova
    api$ meteor add service-configuration

Then we will need to add the `Cordova` plugin `cordova-plugin-facebook4`:

    $ ionic cordova plugin add git+https://github.com/darkbasic/cordova-plugin-facebook4.git --save

Now we need to configure `oauth` services using `service-configuration`:

{{{diffStep 17.3}}}

And store credentials in `settings.json`:

{{{diffStep 17.4}}}

Since `accounts-facebook-cordova` pollutes our user `profile` on `Cordova`, let's filter it in our `ProfilePage`:

{{{diffStep 17.5}}}

Now we can create a test login method to check if everything works so far:

{{{diffStep 17.6}}}

We will need to pass every connection through `Nginx`:

{{{diffStep 17.7}}}

This is the core of our `Nginx` config:

    server {
      listen 80;
      server_name meteor.linuxsystems.it;

      location / {
        proxy_pass http://meteor.linuxsystems.it:8100;
      }

      location ~ ^/(_oauth|packages|ufs) {
        proxy_pass http://meteor.linuxsystems.it:3000;
      }

      location /sockjs {
        proxy_pass http://meteor.linuxsystems.it:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }

      error_page  500 502 503 504  /50x.html;

      location = /50x.html {
        root /usr/share/nginx/html;
      }
    }

Now that we know that everything works we can remove our login test code:

{{{diffStep 17.8}}}

Since we need to link our users to their `Facebook` accounts instead of creating brand new accounts, let's add the `darkbasic:link-accounts` `Meteor` package:

    api$ meteor add darkbasic:link-accounts

Now we create the `linkFacebook` method in the `phone` service:

{{{diffStep "17.10"}}}

And `FacebookPage` with its view and style sheet:

{{{diffStep 17.11}}}

{{{diffStep 17.12}}}

{{{diffStep 17.13}}}

Let's add it to `app.module.ts`:

{{{diffStep 17.14}}}

Now we can finally redirect to `FacebookPage` from `VerificationPage` and the `Facebook` account linking should be finally working:

{{{diffStep 17.15}}}

It's time to fetch our name and profile picture from `Facebook`, as well as listing our `Facebook` friends who we want to chat with.

Let's start by adding the `fb` package:

    $ npm install --save fb

Now we can create our server side `Facebook` service:

{{{diffStep 17.17}}}

And the `getFbProfile` `Meteor` method:

{{{diffStep 17.18}}}

Finally we can update the `FacebookPage` to set the name and the picture from `Facebook`:

{{{diffStep 17.19}}}

To use promises inside publications we will install the `promise` `Meteor` package:

    api$ meteor add promise

Now we can update the `users` publication to also publish `Facebook` friends:

{{{diffStep 17.21}}}

{{{navStep prevRef="https://angular-meteor.com/tutorials/whatsapp2/ionic/push-notifications" nextRef="https://angular-meteor.com/tutorials/whatsapp2/ionic/summary"}}}
